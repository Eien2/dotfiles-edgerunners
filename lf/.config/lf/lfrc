set shell sh
# set '-eu' options for shell commands
# These options are used to have safer shell commands. Option '-e' is used to
# exit on error and option '-u' is used to give error for unset variables.
# Option '-f' disables pathname expansion which can be useful when $f, $fs, and
# $fx variables contain names with '*' or '?' characters. However, this option
# is used selectively within individual commands as it can be limiting at
# times.
set shellopts '-eu'

# set internal field separator (IFS) to "\n" for shell commands
# This is useful to automatically split file names in $fs and $fx properly
# since default file separator used in these variables (i.e. 'filesep' option)
# is newline. You need to consider the values of these options and create your
# commands accordingly.
set ifs "\n"

# leave some space at the top and the bottom of the screen
set scrolloff 10

# Use the `dim` attribute instead of underline for the cursor in the preview pane
set cursorpreviewfmt "\033[7;2m"

#===Basic Settings===#
set hidden true 
set ignorecase true
set icons true
set preview true
set drawbox true

#===Functions===#

# Rename
cmd rename %[ -e $1 ] && printf "file exists" || mv $f $1

# Delete
cmd delete ${{
     set -f
     printf "$fx\n"
     printf "delete?[y/n]"
     read ans
     [ "$ans" = "y" ] && rm -rf $fx
 }}

# Extract
cmd extract ${{
    set -f
    case $f in
        *.tar.bz|*.tar.bz2|*.tbz|*.tbz2) tar xjvf $f;;
        *.tar.gz|*.tgz) tar xzvf $f;;
        *.tar.xz|*.txz) tar xJvf $f;;
        *.zip) unzip $f;;
        *.rar) unrar x $f;;
        *.7z) 7z x $f;;
    esac
}}

# Tar
cmd tar ${{
    set -f
    mkdir $1
    cp -r $fx $1
    tar czf $1.tar.gz $1
    rm -rf $1
}}

# Zip
cmd zip ${{
    set -f
    mkdir $1
    cp -r $fx $1
    zip -r $1.zip $1
    rm -rf $1
}}

# Make File
cmd mkfile ${{
  printf "File Name: "
  read ans
  $EDITOR $ans
}}

# Make Directory
cmd mkdir ${{
  printf "Directory Name: "
  read ans
  mkdir $ans
}}

# Resize Image
cmd resizeimage ${{
  printf "Enter a size example '120x30' (in px): "
  read size
  mogrify -resize $size $f
}}

# Execute program
cmd exeprog ${{
  ./$f
}}

#===Custom keybindings===#

# Extracting
map ae extract
map az zip
map at tar

# Basic Maps 
map y copy
map x cut 
map p paste 
map af mkfile
map ad mkdir 
map r push :rename<space>
map DD delete
map <enter> shell
map ` !true
map sr resizeimage
map e $nvim "$f"
map X exeprog

# Movement 
map gp cd ~/documents/projects 
map gd cd ~/documents
map gD cd ~/downloads 
map gc cd ~/.config 
map gC cd ~/documents/courses 
map gi cd ~/documents/images 
